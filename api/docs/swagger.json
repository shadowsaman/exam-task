{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/car": {
            "get": {
                "description": "Get List Car",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Car"
                ],
                "summary": "Get List Car",
                "operationId": "get_list_car",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetCarListBody",
                        "schema": {
                            "$ref": "#/definitions/models.GetListCarResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create Car",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Car"
                ],
                "summary": "Create Car",
                "operationId": "create_car",
                "parameters": [
                    {
                        "description": "CreateCarRequestBody",
                        "name": "Car",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateCar"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "GetCarBody",
                        "schema": {
                            "$ref": "#/definitions/models.Car"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/car/{id}": {
            "get": {
                "description": "Get By ID Car",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Car"
                ],
                "summary": "Get By ID Car",
                "operationId": "get_by_id_car",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetCarBody",
                        "schema": {
                            "$ref": "#/definitions/models.Car"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update Car",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Car"
                ],
                "summary": "Update Car",
                "operationId": "update_car",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "UpdateCarRequestBody",
                        "name": "Car",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateCarSwag"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "UpdateCarBody",
                        "schema": {
                            "$ref": "#/definitions/models.Car"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Car",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Car"
                ],
                "summary": "Delete Car",
                "operationId": "delete_car",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "DeleteCarBody",
                        "schema": {
                            "$ref": "#/definitions/models.Empty"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/client": {
            "get": {
                "description": "Get List Client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Get List Client",
                "operationId": "get_list_client",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetClientListBody",
                        "schema": {
                            "$ref": "#/definitions/models.GetListClientResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create Client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Create Client",
                "operationId": "create_client",
                "parameters": [
                    {
                        "description": "CreateClientRequestBody",
                        "name": "Client",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateClient"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "GetClientBody",
                        "schema": {
                            "$ref": "#/definitions/models.Client"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/client/{id}": {
            "get": {
                "description": "Get By ID Client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Get By ID Client",
                "operationId": "get_by_id_client",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetClientBody",
                        "schema": {
                            "$ref": "#/definitions/models.Client"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update Client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Update Client",
                "operationId": "update_client",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "UpdateClientRequestBody",
                        "name": "Client",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateClientSwag"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "UpdateClientBody",
                        "schema": {
                            "$ref": "#/definitions/models.Client"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Delete Client",
                "operationId": "delete_client",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "DeleteClientBody",
                        "schema": {
                            "$ref": "#/definitions/models.Empty"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/investor": {
            "get": {
                "description": "Get List Investor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Investor"
                ],
                "summary": "Get List Investor",
                "operationId": "get_list_Investor",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetInvestorListBody",
                        "schema": {
                            "$ref": "#/definitions/models.GetListInvestorResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create Investor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Investor"
                ],
                "summary": "Create Investor",
                "operationId": "create_Investor",
                "parameters": [
                    {
                        "description": "CreateInvestorRequestBody",
                        "name": "Investor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateInvestor"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "GetInvestorBody",
                        "schema": {
                            "$ref": "#/definitions/models.Investor"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/investor-share": {
            "get": {
                "description": "Get List Investor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Investor Share"
                ],
                "summary": "Get List Investor",
                "operationId": "get_list_Investor",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetInvestorListBody",
                        "schema": {
                            "$ref": "#/definitions/models.GetListInvestorResponseFoyda"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/investor/{id}": {
            "get": {
                "description": "Get By ID Investor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Investor"
                ],
                "summary": "Get By ID Investor",
                "operationId": "get_by_id_investor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetInvestorBody",
                        "schema": {
                            "$ref": "#/definitions/models.Investor"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update Investor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Investor"
                ],
                "summary": "Update Investor",
                "operationId": "update_Investor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "UpdateInvestorRequestBody",
                        "name": "Investor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateInvestorSwag"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "UpdateInvestorBody",
                        "schema": {
                            "$ref": "#/definitions/models.Investor"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Investor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Investor"
                ],
                "summary": "Delete Investor",
                "operationId": "delete_Investor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "DeleteInvestorBody",
                        "schema": {
                            "$ref": "#/definitions/models.Empty"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/order": {
            "get": {
                "description": "Get List Order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Get List Order",
                "operationId": "get_list_order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetOrderListBody",
                        "schema": {
                            "$ref": "#/definitions/models.GetListOrderResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create Order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Create Order",
                "operationId": "create_order",
                "parameters": [
                    {
                        "description": "CreateOrderRequestBody",
                        "name": "Order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateOrder"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "GetOrderBody",
                        "schema": {
                            "$ref": "#/definitions/models.Order"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/order/{id}": {
            "get": {
                "description": "Get By ID Order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Get By ID Order",
                "operationId": "get_by_id_order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GetOrderBody",
                        "schema": {
                            "$ref": "#/definitions/models.Order"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update Order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Update Order",
                "operationId": "update_order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "UpdateOrderRequestBody",
                        "name": "Order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateOrderSwag"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "UpdateOrderBody",
                        "schema": {
                            "$ref": "#/definitions/models.Order"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete Order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Delete Order",
                "operationId": "delete_order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "DeleteOrderBody",
                        "schema": {
                            "$ref": "#/definitions/models.Empty"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/orderstatus/{id}": {
            "put": {
                "description": "Update Order Status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order Status"
                ],
                "summary": "Update Order Status",
                "operationId": "update_order_status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "UpdateStatusRequestBody",
                        "name": "Order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateStatusSwag"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "UpdateStatusBody",
                        "schema": {
                            "$ref": "#/definitions/models.Order"
                        }
                    },
                    "400": {
                        "description": "Invalid Argumant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Car": {
            "type": "object",
            "properties": {
                "crated_at": {
                    "type": "string"
                },
                "daily_limit": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "investor_id": {
                    "type": "string"
                },
                "investor_percentage": {
                    "type": "number"
                },
                "km": {
                    "type": "integer"
                },
                "model": {
                    "type": "string"
                },
                "over_limit": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "state_number": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Client": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.CreateCar": {
            "type": "object",
            "properties": {
                "daily_limit": {
                    "type": "integer"
                },
                "investor_id": {
                    "type": "string"
                },
                "investor_percentage": {
                    "type": "number"
                },
                "km": {
                    "type": "integer"
                },
                "model": {
                    "type": "string"
                },
                "over_limit": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "state_number": {
                    "type": "string"
                }
            }
        },
        "models.CreateClient": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "models.CreateInvestor": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "models.CreateOrder": {
            "type": "object",
            "properties": {
                "car_id": {
                    "type": "string"
                },
                "client_id": {
                    "type": "string"
                },
                "day_count": {
                    "type": "integer"
                },
                "give_km": {
                    "type": "integer"
                },
                "paid_price": {
                    "type": "number"
                },
                "recieve_km": {
                    "type": "integer"
                },
                "total_price": {
                    "type": "number"
                }
            }
        },
        "models.Empty": {
            "type": "object"
        },
        "models.GetListCarResponse": {
            "type": "object",
            "properties": {
                "cars": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Car"
                    }
                },
                "count": {
                    "type": "integer"
                }
            }
        },
        "models.GetListClientResponse": {
            "type": "object",
            "properties": {
                "clients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Client"
                    }
                },
                "count": {
                    "type": "integer"
                }
            }
        },
        "models.GetListInvestorResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "investors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Investor"
                    }
                }
            }
        },
        "models.GetListInvestorResponseFoyda": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "investors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.InvestorFoyda"
                    }
                }
            }
        },
        "models.GetListOrderResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Order"
                    }
                }
            }
        },
        "models.Investor": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.InvestorFoyda": {
            "type": "object",
            "properties": {
                "investor_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sum": {
                    "type": "number"
                }
            }
        },
        "models.Order": {
            "type": "object",
            "properties": {
                "car_id": {
                    "type": "string"
                },
                "client_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "day_count": {
                    "type": "integer"
                },
                "give_km": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "paid_price": {
                    "type": "number"
                },
                "recieve_km": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "total_price": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.UpdateCarSwag": {
            "type": "object",
            "properties": {
                "daily_limit": {
                    "type": "integer"
                },
                "investor_id": {
                    "type": "string"
                },
                "investor_percentage": {
                    "type": "number"
                },
                "km": {
                    "type": "integer"
                },
                "model": {
                    "type": "string"
                },
                "over_limit": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "state_number": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.UpdateClientSwag": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "models.UpdateInvestorSwag": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "models.UpdateOrderSwag": {
            "type": "object",
            "properties": {
                "car_id": {
                    "type": "string"
                },
                "client_id": {
                    "type": "string"
                },
                "day_count": {
                    "type": "integer"
                },
                "give_km": {
                    "type": "integer"
                },
                "paid_price": {
                    "type": "number"
                },
                "recieve_km": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "total_price": {
                    "type": "number"
                }
            }
        },
        "models.UpdateStatusSwag": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        }
    }
}